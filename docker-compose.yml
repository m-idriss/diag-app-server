#version: '3.9'

services:
  kafka:
    image: bitnami/kafka:latest
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
    restart: unless-stopped
    environment:
      KAFKA_CFG_LISTENERS: PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:29093
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      ALLOW_PLAINTEXT_LISTENER: yes
    networks:
      - proxinet
    healthcheck:
      test: [ "CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list || exit 1" ]
      start_period: 20s
      interval: 300s
      timeout: 10s
      retries: 3
    volumes:
      - kafka-data:/var/lib/kafka/data

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    restart: unless-stopped
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      AUTH_TYPE: "LOGIN_FORM"
      SPRING_SECURITY_USER_NAME: Admin!User1
      SPRING_SECURITY_USER_PASSWORD: Admin!Pass1

    networks:
      - proxinet
    ports:
      - "8090:8080"
    healthcheck:
      test: wget --no-verbose --tries=1 --spider  http://localhost:8080/actuator/health
      interval: 300s
      timeout: 10s
      retries: 10
      start_period: 10s
  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    restart: unless-stopped
    volumes:
      - prometheus-data:/prometheus
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    networks:
      - proxinet
    healthcheck:
      test: wget --no-verbose --tries=1 --spider  http://localhost:9090
      interval: 300s
      timeout: 10s
      retries: 10
      start_period: 10s
  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    restart: unless-stopped
    ports:
      - "3000:3000"
    networks:
      - proxinet
    environment:
      GF_SECURITY_ADMIN_USER: Admin!User1
      GF_SECURITY_ADMIN_PASSWORD: Admin!Pass1
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
    healthcheck:
      test: wget --no-verbose --tries=1 --spider  http://localhost:3000
      interval: 300s
      timeout: 10s
      retries: 10
      start_period: 10s

networks:
  proxinet:
    name: kafka-network

volumes:
  kafka-data:
  prometheus-data:
    driver: local